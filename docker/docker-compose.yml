services:
  zookeeper:
    image: confluentinc/cp-zookeeper:7.7.1
    container_name: zookeeper
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    ports:
      - 22181:2181
  
  kafka:
    image: confluentinc/cp-kafka:7.7.1
    container_name: broker
    depends_on:
      - zookeeper
    ports:
      - 9092:9092
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: 'zookeeper:2181'
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_INTERNAL:PLAINTEXT
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://localhost:9092,PLAINTEXT_INTERNAL://broker:29092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1

  keycloak:
    image: bitnami/keycloak:26.0.0
    restart: on-failure
    container_name: keycloak
    environment:
      KEYCLOAK_ADMIN: admin
      KEYCLOAK_ADMIN_PASSWORD: admin
      KEYCLOAK_HTTP_PORT: 8181
      KEYCLOAK_HOSTNAME: localhost
      KEYCLOAK_ENABLE_HTTPS: false
      KEYCLOAK_HOSTNAME_STRICT: false
      KEYCLOAK_ENABLE_HEALTH_ENDPOINTS: false
      KEYCLOAK_DATABASE_HOST: db_keycloak
    ports:
      - 8181:8181
    volumes:
      - ./volumes/keycloak:/docker-entrypoint-initdb.d
    depends_on:
      - db_keycloak
    networks:
      - keycloak_network
  
  # docker exec -it postgres-events bash
  postgres:
    image: postgres:17.0
    restart: on-failure
    container_name: postgres-events
    ports: 
      - 5432:5432
    volumes:
      - ./volumes/postgres:/var/lib/postgresql/data
    environment:
      - POSTGRES_PASSWORD=postgres

  db_keycloak:
    image: docker.io/bitnami/postgresql:latest
    container_name: db_keycloak
    environment:
      - ALLOW_EMPTY_PASSWORD=yes
      - POSTGRESQL_USERNAME=bn_keycloak
      - POSTGRESQL_DATABASE=bitnami_keycloak
    ports:
      - 5433:5432
    volumes:
      - ./volumes/keycloak_db:/bitnami/postgresql
    networks:
      - keycloak_network
  
networks:
  keycloak_network:
    driver: bridge
  kafka_network:
    driver: bridge