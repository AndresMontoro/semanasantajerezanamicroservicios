services:
  zookeeper:
    image: confluentinc/cp-zookeeper:7.2.0
    restart: on-failure
    container_name: zookeeper
    networks:
      - kafka_network
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
  
  broker:
    image: confluentinc/cp-kafka:7.2.0
    restart: on-failure  
    container_name: broker
    networks:
      - kafka_network
    ports:
      - 9092:9092
    depends_on:
      - zookeeper
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: 'zookeeper:2181'
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://localhost:9092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: CONTROLLER:PLAINTEXT,PLAINTEXT:PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: 'true'
  
  keycloak:
    image: quay.io/keycloak/keycloak:25.0.6
    restart: on-failure
    command: start-dev
    container_name: keycloak
    environment:
      KC_HOSTNAME: localhost
      KC_HOSTNAME_STRICT_BACKCHANNEL: false
      KC_HTTP_ENABLED: true
      KC_HOSTNAME_STRICT_HTTPS: false
      KC_HEALTH_ENABLED: true
      KEYCLOAK_ADMIN: admin 
      KEYCLOAK_ADMIN_PASSWORD: admin
    ports:
      - 8181:8080
    volumes:
      - ./keycloak:/opt/jboss/keycloak/standalone/data
    networks:
      - keycloak_network
  
  # docker exec -it postgres-events bash
  postgres:
    image: postgres:17.0
    restart: on-failure
    container_name: postgres-events
    ports: 
      - 5432:5432
    volumes:
      - ./postgres:/var/lib/postgresql/data
    environment:
      - POSTGRES_PASSWORD=postgres
  
networks:
  keycloak_network:
    driver: bridge
  kafka_network:
    driver: bridge